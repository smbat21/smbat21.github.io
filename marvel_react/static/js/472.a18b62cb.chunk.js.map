{"version":3,"file":"static/js/472.a18b62cb.chunk.js","mappings":"wOAiDMA,EAAO,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACJC,EAA8DD,EAA9DC,MAAOC,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,UAAWC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,SAAUC,EAAUN,EAAVM,MAE5D,OACI,iBAAKC,UAAU,eAAc,WACzB,gBAAKC,IAAKJ,EAAWK,IAAKR,EAAOM,UAAU,uBAC3C,iBAAKA,UAAU,qBAAoB,WAC/B,eAAIA,UAAU,qBAAoB,SAAEN,KACpC,cAAGM,UAAU,sBAAqB,SAAEL,KACpC,cAAGK,UAAU,sBAAqB,SAAEJ,KACpC,cAAGI,UAAU,sBAAqB,SAAEF,KACpC,gBAAKE,UAAU,sBAAqB,SAAED,QAE1C,SAAC,KAAI,CAACI,GAAG,UAAUH,UAAU,qBAAoB,SAAC,kBAG9D,EAEA,EArDwB,WAEpB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAK,eAAjCb,EAAK,KAAEc,EAAQ,KACtB,GAAiDC,EAAAA,EAAAA,KAAzCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,YAElCC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,CAACV,IAEJ,IAAMU,EAAc,WAChBF,IACAD,EAASP,GACJW,KAAKC,EAEd,EAEMA,EAAgB,SAACvB,GACnBc,EAASd,EACb,EAEMwB,EAAeP,GAAQ,SAACQ,EAAA,EAAY,IAAM,KAC1CC,EAAUV,GAAU,SAACW,EAAA,EAAO,IAAM,KAClCC,EAAYX,GAASD,IAAYhB,EAAkC,MAAzB,SAACD,EAAI,CAACC,MAAOA,IAE7D,OACI,gCACKwB,EACAE,EACAE,IAIb,C","sources":["components/pages/SingleComicPage.js"],"sourcesContent":["import { Link, useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService'\r\n\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\n\r\n\r\n\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n\r\n    const { comicId } = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded);\r\n\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(error || loading || !comic) ? <View comic={comic} /> : null\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({ comic }) => {\r\n    const { title, description, pageCount, thumbnail, language, price } = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">{language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"],"names":["View","comic","title","description","pageCount","thumbnail","language","price","className","src","alt","to","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content"],"sourceRoot":""}